from django.conf.urls import url

from .views import *

urlpatterns = [
    url(r"^clusteravailabilitylevel/$", ClusterAvailabilityLevelList.as_view()),
    url(r"^clusteravailabilitylevel/(?P<pk>[0-9]+)/$", ClusterAvailabilityLevelDetail.as_view()),
    url(r"^clustercpuoversubscription/$", ClusterCpuOversubscriptionList.as_view()),
    url(r"^clustercpuoversubscription/(?P<pk>[0-9]+)/$", ClusterCpuOversubscriptionDetail.as_view()),
    url(r"^clustermemoryoversubscription/$", ClusterMemoryOversubscriptionList.as_view()),
    url(r"^clustermemoryoversubscription/(?P<pk>[0-9]+)/$", ClusterMemoryOversubscriptionDetail.as_view()),
    url(r"^cpuarchitecture/$", CpuArchitectureList.as_view()),
    url(r"^cpuarchitecture/(?P<pk>[0-9]+)/$", CpuArchitectureDetail.as_view()),
    url(r"^customramange/$", CustomRamAngeList.as_view()),
    url(r"^customramange/(?P<pk>[0-9]+)/$", CustomRamAngeDetail.as_view()),
    url(r"^databasetype/$", DatabaseTypeList.as_view()),
    url(r"^databasetype/(?P<pk>[0-9]+)/$", DatabaseTypeDetail.as_view()),
    url(r"^disasterrecoverytenancy/$", DisasterRecoveryTenancyList.as_view()),
    url(r"^disasterrecoverytenancy/(?P<pk>[0-9]+)/$", DisasterRecoveryTenancyDetail.as_view()),
    url(r"^encryptionstate/$", EncryptionStateList.as_view()),
    url(r"^encryptionstate/(?P<pk>[0-9]+)/$", EncryptionStateDetail.as_view()),
    url(r"^esxhostcpuoversubscription/$", EsxHostCpuOversubscriptionList.as_view()),
    url(r"^esxhostcpuoversubscription/(?P<pk>[0-9]+)/$", EsxHostCpuOversubscriptionDetail.as_view()),
    url(r"^esxhostmemoryoversubscription/$", EsxHostMemoryOversubscriptionList.as_view()),
    url(r"^esxhostmemoryoversubscription/(?P<pk>[0-9]+)/$", EsxHostMemoryOversubscriptionDetail.as_view()),
    url(r"^eventcategory/$", EventCategoryList.as_view()),
    url(r"^eventcategory/(?P<pk>[0-9]+)/$", EventCategoryDetail.as_view()),
    url(r"^eventorigin/$", EventOriginList.as_view()),
    url(r"^eventorigin/(?P<pk>[0-9]+)/$", EventOriginDetail.as_view()),
    url(r"^eventource/$", EventourceList.as_view()),
    url(r"^eventource/(?P<pk>[0-9]+)/$", EventourceDetail.as_view()),
    url(r"^eventtatus/$", EventtatusList.as_view()),
    url(r"^eventtatus/(?P<pk>[0-9]+)/$", EventtatusDetail.as_view()),
    url(r"^eventtype/$", EventTypeList.as_view()),
    url(r"^eventtype/(?P<pk>[0-9]+)/$", EventTypeDetail.as_view()),
    url(r"^hoststate/$", HostStateList.as_view()),
    url(r"^hoststate/(?P<pk>[0-9]+)/$", HostStateDetail.as_view()),
    url(r"^hp3partier/$", Hp3parTierList.as_view()),
    url(r"^hp3partier/(?P<pk>[0-9]+)/$", Hp3parTierDetail.as_view()),
    url(r"^ipaddressallocationstate/$", IpAddressAllocationStateList.as_view()),
    url(r"^ipaddressallocationstate/(?P<pk>[0-9]+)/$", IpAddressAllocationStateDetail.as_view()),
    url(r"^ipaddressallocationpurpose/$", IpAddressAllocationPurposeList.as_view()),
    url(r"^ipaddressallocationpurpose/(?P<pk>[0-9]+)/$", IpAddressAllocationPurposeDetail.as_view()),
    url(r"^lamatemplatestate/$", LamaTemplateStateList.as_view()),
    url(r"^lamatemplatestate/(?P<pk>[0-9]+)/$", LamaTemplateStateDetail.as_view()),
    url(r"^lamatemplatestatus/$", LamaTemplateStatusList.as_view()),
    url(r"^lamatemplatestatus/(?P<pk>[0-9]+)/$", LamaTemplateStatusDetail.as_view()),
    url(r"^licenseeventtype/$", LicenseEventTypeList.as_view()),
    url(r"^licenseeventtype/(?P<pk>[0-9]+)/$", LicenseEventTypeDetail.as_view()),
    url(r"^lifecycleactiontype/$", LifecycleActionTypeList.as_view()),
    url(r"^lifecycleactiontype/(?P<pk>[0-9]+)/$", LifecycleActionTypeDetail.as_view()),
    url(r"^lifecyclestate/$", LifecycleStateList.as_view()),
    url(r"^lifecyclestate/(?P<pk>[0-9]+)/$", LifecycleStateDetail.as_view()),
    url(r"^lvmlevel/$", LvmLevelList.as_view()),
    url(r"^lvmlevel/(?P<pk>[0-9]+)/$", LvmLevelDetail.as_view()),
    url(r"^lvmtype/$", LvmTypeList.as_view()),
    url(r"^lvmtype/(?P<pk>[0-9]+)/$", LvmTypeDetail.as_view()),
    url(r"^macaddressallocationstate/$", MacAddressAllocationStateList.as_view()),
    url(r"^macaddressallocationstate/(?P<pk>[0-9]+)/$", MacAddressAllocationStateDetail.as_view()),
    url(r"^migrationstate/$", MigrationStateList.as_view()),
    url(r"^migrationstate/(?P<pk>[0-9]+)/$", MigrationStateDetail.as_view()),
    url(r"^sapoffering/$", SapOfferingList.as_view()),
    url(r"^sapoffering/(?P<pk>[0-9]+)/$", SapOfferingDetail.as_view()),
    url(r"^servicelevel/$", ServiceLevelList.as_view()),
    url(r"^servicelevel/(?P<pk>[0-9]+)/$", ServiceLevelDetail.as_view()),
    url(r"^servicerole/$", ServiceRoleList.as_view()),
    url(r"^servicerole/(?P<pk>[0-9]+)/$", ServiceRoleDetail1.as_view()),
    url(r"^sidorigin/$", SidOriginList.as_view()),
    url(r"^sidorigin/(?P<pk>[0-9]+)/$", SidOriginDetail.as_view()),
    url(r"^sidtype/$", SidTypeList.as_view()),
    url(r"^sidtype/(?P<pk>[0-9]+)/$", SidTypeDetail.as_view()),
    url(r"^storagestatus/$", StorageStatusList.as_view()),
    url(r"^storagestatus/(?P<pk>[0-9]+)/$", StorageStatusDetail.as_view()),
    url(r"^storagetype/$", StorageTypeList.as_view()),
    url(r"^storagetype/(?P<pk>[0-9]+)/$", StorageTypeDetail.as_view()),
    url(r"^storageworkloadtype/$", StorageWorkloadTypeList.as_view()),
    url(r"^storageworkloadtype/(?P<pk>[0-9]+)/$", StorageWorkloadTypeDetail.as_view()),
    url(r"^subscriptionstatus/$", SubscriptionStatusList.as_view()),
    url(r"^subscriptionstatus/(?P<pk>[0-9]+)/$", SubscriptionStatusDetail.as_view()),
    url(r"^suitability/$", SuitabilityList.as_view()),
    url(r"^suitability/(?P<pk>[0-9]+)/$", SuitabilityDetail.as_view()),
    url(r"^supplier/$", SupplierList.as_view()),
    url(r"^supplier/(?P<pk>[0-9]+)/$", SupplierDetail.as_view()),
    url(r"^ticketclosurecodeinterpretation/$", TicketClosureCodeInterpretationList.as_view()),
    url(r"^ticketclosurecodeinterpretation/(?P<pk>[0-9]+)/$", TicketClosureCodeInterpretationDetail.as_view()),
    url(r"^ticketimplementationstatus/$", TicketImplementationStatusList.as_view()),
    url(r"^ticketimplementationstatus/(?P<pk>[0-9]+)/$", TicketImplementationStatusDetail.as_view()),
    url(r"^ticketorigin/$", TicketOriginList.as_view()),
    url(r"^ticketorigin/(?P<pk>[0-9]+)/$", TicketOriginDetail.as_view()),
    url(r"^tickettate/$", TickettateList.as_view()),
    url(r"^tickettate/(?P<pk>[0-9]+)/$", TickettateDetail.as_view()),
    url(r"^tickettype/$", TicketTypeList.as_view()),
    url(r"^tickettype/(?P<pk>[0-9]+)/$", TicketTypeDetail.as_view()),
    url(r"^topology/$", TopologyList.as_view()),
    url(r"^topology/(?P<pk>[0-9]+)/$", TopologyDetail.as_view()),
    url(r"^virtualization/$", VirtualizationList.as_view()),
    url(r"^virtualization/(?P<pk>[0-9]+)/$", VirtualizationDetail.as_view()),
    url(r"^vlanrole/$", VlanRoleList.as_view()),
    url(r"^vlanrole/(?P<pk>[0-9]+)/$", VlanRoleDetail.as_view()),
    url(r"^vlantype/$", VlanTypeList.as_view()),
    url(r"^vlantype/(?P<pk>[0-9]+)/$", VlanTypeDetail.as_view()),
    url(r"^volumegrouptype/$", VolumeGroupTypeList.as_view()),
    url(r"^volumegrouptype/(?P<pk>[0-9]+)/$", VolumeGroupTypeDetail.as_view()),
    url(r"^volumetype/$", VolumeTypeList.as_view()),
    url(r"^volumetype/(?P<pk>[0-9]+)/$", VolumeTypeDetail.as_view()),
    url(r"^workloadtype/$", WorkloadTypeList.as_view()),
    url(r"^workloadtype/(?P<pk>[0-9]+)/$", WorkloadTypeDetail.as_view()),
    url(r"^zone/$", ZoneList.as_view()),
    url(r"^zone/(?P<pk>[0-9]+)/$", ZoneDetail.as_view()),
    url(r"^datacenter/$", DataCenterList.as_view()),
    url(r"^datacenter/(?P<pk>[0-9]+)/$", DataCenterDetail.as_view()),
    url(r"^vcenter/$", VcenterList.as_view()),
    url(r"^vcenter/(?P<pk>[0-9]+)/$", VcenterDetail.as_view()),
    url(r"^tenant/$", TenantList.as_view()),
    url(r"^tenant/(?P<pk>[0-9]+)/$", TenantDetail.as_view()),
    url(r"^cluster/$", ClusterList.as_view()),
    url(r"^cluster/(?P<pk>[0-9]+)/$", ClusterDetail.as_view()),
    url(r"^hp3par/$", Hp3parList.as_view()),
    url(r"^hp3par/(?P<pk>[0-9]+)/$", Hp3parDetail.as_view()),
    url(r"^cpg/$", CpgList.as_view()),
    url(r"^cpg/(?P<pk>[0-9]+)/$", CpgDetail.as_view()),
    url(r"^customcpuvalue/$", CustomCpuValueList.as_view()),
    url(r"^customcpuvalue/(?P<pk>[0-9]+)/$", CustomCpuValueDetail.as_view()),
    url(r"^tier/$", TierList.as_view()),
    url(r"^tier/(?P<pk>[0-9]+)/$", TierDetail.as_view()),
    url(r"^customsize/$", CustomSizeList.as_view()),
    url(r"^customsize/(?P<pk>[0-9]+)/$", CustomSizeDetail.as_view()),
    url(r"^datastore/$", DatastoreList.as_view()),
    url(r"^datastore/(?P<pk>[0-9]+)/$", DatastoreDetail.as_view()),
    url(r"^esxhost/$", EsxHostList.as_view()),
    url(r"^esxhost/(?P<pk>[0-9]+)/$", EsxHostDetail.as_view()),
    url(r"^eventcode/$", EventCodeList.as_view()),
    url(r"^eventcode/(?P<pk>[0-9]+)/$", EventCodeDetail.as_view()),
    url(r"^lvm/$", LvmList.as_view()),
    url(r"^lvm/(?P<pk>[0-9]+)/$", LvmDetail.as_view()),
    url(r"^ordertracking/$", OrderTrackingList.as_view()),
    url(r"^ordertracking/(?P<pk>[0-9]+)/$", OrderTrackingDetail.as_view()),
    url(r"^system/$", SystemList.as_view()),
    url(r"^system/(?P<pk>[0-9]+)/$", SystemDetail.as_view()),
    url(r"^ticketclosurecode/$", TicketClosureCodeList.as_view()),
    url(r"^ticketclosurecode/(?P<pk>[0-9]+)/$", TicketClosureCodeDetail.as_view()),
    url(r"^ticket/$", TicketList.as_view()),
    url(r"^ticket/(?P<pk>[0-9]+)/$", TicketDetail.as_view()),
    url(r"^event/$", EventList.as_view()),
    url(r"^event/(?P<pk>[0-9]+)/$", EventDetail.as_view()),
    url(r"^hp3parcapacity/$", Hp3parCapacityList.as_view()),
    url(r"^hp3parcapacity/(?P<pk>[0-9]+)/$", Hp3parCapacityDetail.as_view()),
    url(r"^hp3parpair/$", Hp3parPairList.as_view()),
    url(r"^hp3parpair/(?P<pk>[0-9]+)/$", Hp3parPairDetail.as_view()),
    url(r"^operatingsystem/$", OperatingSystemList.as_view()),
    url(r"^operatingsystem/(?P<pk>[0-9]+)/$", OperatingSystemDetail.as_view()),
    url(r"^image/$", ImageList.as_view()),
    url(r"^image/(?P<pk>[0-9]+)/$", ImageDetail.as_view()),
    url(r"^size/$", SizeList.as_view()),
    url(r"^size/(?P<pk>[0-9]+)/$", SizeDetail.as_view()),
    url(r"^vlan/$", VlanList.as_view()),
    url(r"^vlan/(?P<pk>[0-9]+)/$", VlanDetail.as_view()),
    url(r"^instancehost/$", InstanceHostList.as_view()),
    url(r"^instancehost/(?P<pk>[0-9]+)/$", InstanceHostDetail.as_view()),
    url(r"^nictype/$", NicTypeList.as_view()),
    url(r"^nictype/(?P<pk>[0-9]+)/$", NicTypeDetail.as_view()),
    url(r"^ipaddresspool/$", IpAddressPoolList.as_view()),
    url(r"^ipaddresspool/(?P<pk>[0-9]+)/$", IpAddressPoolDetail.as_view()),
    url(r"^macaddresspool/$", MacAddressPoolList.as_view()),
    url(r"^macaddresspool/(?P<pk>[0-9]+)/$", MacAddressPoolDetail.as_view()),
    url(r"^instancehostnicconfig/$", InstanceHostNicConfigList.as_view()),
    url(r"^instancehostnicconfig/(?P<pk>[0-9]+)/$", InstanceHostNicConfigDetail.as_view()),
    url(r"^lamatemplatetargetsidinstancehost/$", LamaTemplateTargetSidInstanceHostList.as_view()),
    url(r"^lamatemplatetargetsidinstancehost/(?P<pk>[0-9]+)/$", LamaTemplateTargetSidInstanceHostDetail.as_view()),
    url(r"^lamatemplatetargetsidinstancehostnicconfig/$", LamaTemplateTargetSidInstanceHostNicConfigList.as_view()),
    url(r"^lamatemplatetargetsidinstancehostnicconfig/(?P<pk>[0-9]+)/$",
        LamaTemplateTargetSidInstanceHostNicConfigDetail.as_view()),
    url(r"^lifecycleaction/$", LifecycleActionList.as_view()),
    url(r"^lifecycleaction/(?P<pk>[0-9]+)/$", LifecycleActionDetail.as_view()),
    url(r"^lamatemplate/$", LamaTemplateList.as_view()),
    url(r"^lamatemplate/(?P<pk>[0-9]+)/$", LamaTemplateDetail.as_view()),
    url(r"^lamatemplatetargetsid/$", LamaTemplateTargetSidList.as_view()),
    url(r"^lamatemplatetargetsid/(?P<pk>[0-9]+)/$", LamaTemplateTargetSidDetail.as_view()),
    url(r"^serviceroledetail/$", ServiceRoleDetailList.as_view()),
    url(r"^serviceroledetail/(?P<pk>[0-9]+)/$", ServiceRoleDetailDetail.as_view()),
    url(r"^lamatemplatetargetsidservice/$", LamaTemplateTargetSidServiceList.as_view()),
    url(r"^lamatemplatetargetsidservice/(?P<pk>[0-9]+)/$", LamaTemplateTargetSidServiceDetail.as_view()),
    url(r"^lamatemplatetargetsidvolume/$", LamaTemplateTargetSidVolumeList.as_view()),
    url(r"^lamatemplatetargetsidvolume/(?P<pk>[0-9]+)/$", LamaTemplateTargetSidVolumeDetail.as_view()),
    url(r"^service/$", ServiceList.as_view()),
    url(r"^service/(?P<pk>[0-9]+)/$", ServiceDetail.as_view()),
    url(r"^service_vip/$", Service_vipList.as_view()),
    url(r"^service_vip/(?P<pk>[0-9]+)/$", Service_vipDetail.as_view()),
    url(r"^sidlvmlicenseevent/$", SidLvmLicenseEventList.as_view()),
    url(r"^sidlvmlicenseevent/(?P<pk>[0-9]+)/$", SidLvmLicenseEventDetail.as_view()),
    url(r"^tenantusergroup/$", TenantUserGroupList.as_view()),
    url(r"^tenantusergroup/(?P<pk>[0-9]+)/$", TenantUserGroupDetail.as_view()),
    url(r"^vlantriplet/$", VlanTripletList.as_view()),
    url(r"^vlantriplet/(?P<pk>[0-9]+)/$", VlanTripletDetail.as_view()),
    url(r"^vla/$", VlaList.as_view()),
    url(r"^vla/(?P<pk>[0-9]+)/$", VlaDetail.as_view()),
    url(r"^vmnetwork/$", VmnetworkList.as_view()),
    url(r"^vmnetwork/(?P<pk>[0-9]+)/$", VmnetworkDetail.as_view()),
    url(r"^volumegroup/$", VolumeGroupList.as_view()),
    url(r"^volumegroup/(?P<pk>[0-9]+)/$", VolumeGroupDetail.as_view()),
    url(r"^volumegroupfilesystem/$", VolumeGroupFileSystemList.as_view()),
    url(r"^volumegroupfilesystem/(?P<pk>[0-9]+)/$", VolumeGroupFileSystemDetail.as_view()),
    url(r"^volume/$", VolumeList.as_view()),
    url(r"^volume/(?P<pk>[0-9]+)/$", VolumeDetail.as_view()),

]
