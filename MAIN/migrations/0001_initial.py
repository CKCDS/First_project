# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2019-01-03 06:37
from __future__ import unicode_literals

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('SOD_LVM', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('executionid', models.CharField(max_length=100, verbose_name='Executionid')),
                ('jobstatus', models.CharField(choices=[('New', 'New'), ('Init', 'Init'), ('Requested', 'Requested'), ('Retrive_error', 'Retrive_error'), ('Scheduled', 'Scheduled'), ('Pending', 'Pending'), ('Running', 'Running'), ('Succeeded', 'Succeeded'), ('Closed', 'Closed'), ('Waiting', 'Waiting'), ('Failed', 'Failed'), ('Error', 'Error'), ('Timeout', 'Timeout'), ('Canceled', 'Canceled'), ('Canceling', 'Canceling'), ('Paused', 'Paused'), ('Pausing', 'Pausing'), ('Resuming', 'Resuming')], max_length=100, verbose_name='Jobstatus')),
                ('scheduletime', models.DateTimeField(verbose_name='Scheduletime')),
                ('trigerat', models.DateTimeField(verbose_name='Trigerat')),
                ('request', models.TextField(verbose_name='Request')),
                ('response', models.TextField(verbose_name='Response')),
                ('resourceid', models.CharField(max_length=100, verbose_name='Resourceid')),
                ('retrynum', models.IntegerField(verbose_name='Retrynum')),
            ],
            options={
                'db_table': 'job',
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
            },
        ),
        migrations.CreateModel(
            name='JobTemplate',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('orchtype', models.CharField(choices=[('StackStorm', 'StackStorm'), ('AnsibleTower', 'AnsibleTower')], default='StackStorm', max_length=100, verbose_name='Orchtype')),
            ],
            options={
                'db_table': 'jobtemplate',
                'verbose_name': 'Job template',
                'verbose_name_plural': 'Job templates',
            },
        ),
        migrations.CreateModel(
            name='Orchestrator',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('url', models.URLField(verbose_name='Url')),
                ('orchtype', models.CharField(choices=[('StackStorm', 'StackStorm'), ('AnsibleTower', 'AnsibleTower')], default='StackStorm', max_length=100, verbose_name='Orchtype')),
                ('username', models.CharField(max_length=30, verbose_name='Username')),
                ('password', models.CharField(max_length=30, verbose_name='Password')),
                ('datacenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SOD_LVM.DataCenter', verbose_name='Datacenter')),
                ('lifecycle_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SOD_LVM.LifecycleState', verbose_name='Lifecycle_state')),
            ],
            options={
                'db_table': 'orchestrator',
                'verbose_name': 'Orchestrator',
                'verbose_name_plural': 'Orchestrators',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobtemplatename', models.CharField(max_length=100, verbose_name='Jobtemplatename')),
                ('type', models.CharField(choices=[('daily', 'daily'), ('weekly', 'weekly'), ('monthly', 'monthly'), ('onetime', 'onetime')], max_length=100, verbose_name='Type')),
                ('request', models.TextField(verbose_name='Request')),
                ('minute', models.IntegerField(verbose_name='Minute')),
                ('hour', models.IntegerField(verbose_name='Hour')),
                ('day', models.IntegerField(verbose_name='Day')),
                ('date', models.IntegerField(verbose_name='Date')),
                ('next_runt_ime', models.DateTimeField(verbose_name='Next runt ime')),
                ('last_run_time', models.DateTimeField(verbose_name='Last run time')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Executed', 'Executed'), ('Error', 'Error')], default='Active', max_length=100, verbose_name='Status')),
                ('error_message', models.TextField(verbose_name='Error message')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SOD_LVM.System', verbose_name='System')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SOD_LVM.Tenant', verbose_name='Tenant')),
            ],
            options={
                'db_table': 'schedule',
                'verbose_name': 'Schedule',
                'verbose_name_plural': 'Schedules',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='jobtemplate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MAIN.JobTemplate', verbose_name='Jobtemplate'),
        ),
        migrations.AddField(
            model_name='job',
            name='orchestrator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MAIN.Orchestrator', verbose_name='Orchestrator'),
        ),
        migrations.AddField(
            model_name='job',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MAIN.Schedule', verbose_name='Schedule'),
        ),
        migrations.AddField(
            model_name='job',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SOD_LVM.Tenant', verbose_name='Tenant'),
        ),
    ]
